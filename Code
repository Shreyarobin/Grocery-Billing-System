#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_ITEMS 100
#define MAX_NAME_LENGTH 50

typedef struct 
{
    char *name;
    float price;
    int quantity;
} Item;

void displayMenu() 
{
    printf("\n========================\n");
    printf("1. Add item to Cart\n");
    printf("2. View Cart\n");
    printf("3. Update Cart\n");
    printf("4. Generate Bill\n");
    printf("5. Exit\n");
    printf("========================\n");
}

void addItem(Item *cart[], int *numItems, Item *item) 
{
    cart[*numItems] = item;
    (*numItems)++;
    printf("Item added to cart.\n");
}

void viewCart(Item *cart[], int numItems) 
{
    if (numItems == 0) {
        printf("Cart is empty.\n");
        return;
    }
    printf("\n======= Cart =======\n");
    for(int i = 0; i < numItems; i++) {
        printf("%d. %s - $%.2f x %d\n", i + 1, cart[i]->name, cart[i]->price, cart[i]->quantity);
    }
    printf("====================\n");
}

void updateCart(Item *cart[], int numItems) 
{
    if (numItems == 0) {
        printf("Cart is empty.\n");
        return;
    }
    int choice;
    viewCart(cart, numItems);
    printf("Enter the item number you want to update: ");
    scanf("%d", &choice);
    if (choice < 1 || choice > numItems) {
        printf("Invalid item number.\n");
        return;
    }
    printf("Enter new quantity: ");
    scanf("%d", &cart[choice - 1]->quantity);
    printf("Cart updated.\n");
}

float calculateBill(Item *cart[], int numItems) 
{
    float total = 0.0;
    printf("\n======= Bill Details =======\n");
    for (int i = 0; i < numItems; i++) 
	{
        float subtotal = cart[i]->price * cart[i]->quantity;
        printf("%d. %s - $%.2f x %d = $%.2f\n", i + 1, cart[i]->name, cart[i]->price, cart[i]->quantity, subtotal);
        total += subtotal;
    }
    printf("============================\n");
    return total;
}

int main() 
{
    Item *cart = malloc(MAX_ITEMS * sizeof(Item));
    if (cart == NULL) {
        printf("Memory allocation failed. Exiting...\n");
        return 1;
    }
    
    int numItems = 0;
    int choice;
    float totalBill;

    do {
        displayMenu();
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1: {
                Item *newItem = malloc(sizeof(Item));
                if (newItem == NULL) {
                    printf("Memory allocation failed. Exiting...\n");
                    return 1;
                }
                newItem->name = malloc(MAX_NAME_LENGTH * sizeof(char));
                if (newItem->name == NULL) {
                    printf("Memory allocation failed. Exiting...\n");
                    free(newItem);
                    return 1;
                }
                printf("Enter item name: ");
                scanf("%s", newItem->name);
                printf("Enter item price: ");
                scanf("%f", &newItem->price);
                printf("Enter item quantity: ");
                scanf("%d", &newItem->quantity);
                addItem(cart, &numItems, newItem);
                break;
            }
            case 2:
                viewCart(cart, numItems);
                break;
            case 3:
                updateCart(cart, numItems);
                break;
            case 4:
                totalBill = calculateBill(cart, numItems);
                printf("Total bill: $%.2f\n", totalBill);
                break;
            case 5:
                printf("Thank you for shopping with us!\n");
                break;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    } while (choice != 5);

    for (Item **ptr = cart; ptr < cart + numItems; ++ptr) {
        free((*ptr)->name);
        free(*ptr);
    }
    free(cart);

    return 0;
}





    
               
